#!/bin/bash
#
# Author: Martin Matusiak <numerodix@gmail.com>
# Licensed under the GNU Public License, version 3.


# load constants and functions
p=$(dirname $(readlink -f $0)); . $p/lib.sh

usage="Usage:  ${b}${tool_name} ${r}[${bb}<file(s)>${r} | ${b}--dev ${bb}/dev/dvd${r} | ${b}--dir ${bb}/path${r} | ${b}--iso ${bb}disc.iso${r}]
  <file(s)>     files to read
  -d --dev      dvd device to read from (default is ${bb}/dev/dvd${r})
  -q --dir      dvd directory to read from
  -i --iso      dvd iso image to read from
     --version  show ${suite_name} version"

shorts="d:q:i:"
longs="dev:,dir:,iso:,version"
eval $(get_parsecmd "$tool_name" "$shorts" "$longs")

while true; do
    case "$1" in
        -d|--dev     ) input_dvd_device="$2"; shift 2;;		# str
        -q|--dir     ) input_dvd_device="$2"; shift 2;;		# str
        -i|--iso     ) input_dvd_device="$2"; shift 2;;		# str
           --version ) print_version;;
        --           ) shift ; break ;;
        *            ) break ;;
    esac
done

display_tool_banner


if [[ ! "$input_dvd_device" && ! "$@" ]]; then
    echo -e "$usage"
    exit 2
fi


# Build array either of dvd titles or files given as input

files=() ; i=0
if [[ "$input_dvd_device" ]]; then
    titles=$(examine_dvd_for_titlecount "$input_dvd_device")
    if [[ "$titles" ]]; then
        for f in $($seq 1 $titles); do
            files[$i]="$f"
            i=$(( $i+1 ))
        done
    else
        echo -e "${e}Could not read from ${bb}$input_dvd_device${e} dvd device${r}"
        exit 1
    fi
else
    for f in "$@"; do
        files[$i]="$f"
        i=$(( $i+1 ))
    done
fi


display_title_line "header"
for file in "${files[@]}"; do
    if [[ ! "$input_dvd_device" && ! -e "$file" ]]; then
        echo -e "${e}File ${bb}$file${e} does not exist"
        exit 1
    fi

    if [[ "$input_dvd_device" ]]; then
        filename="$file"
        filesize="-1"
        info=($(examine_title "dvd://$file" "$input_dvd_device"))
    else
        filename=$(basename "$file")

        filesize=$(stat "$file" | $grep "Size:" | $sed "s|.*Size: \([0-9]*\).*|\1|g")
        filesize=$(echo "scale=0; $filesize/1024/1024" | $bc)  # convert to mb

        info=($(examine_title "$file"))
    fi
    
    width=${info[0]}

    height=${info[1]}
    
    fps=${info[2]}
    
    length=${info[3]}
    
    abitrate=$( echo "scale=0; ${info[4]}/1024" | $bc )  # convert to kbps

    aformat=${info[5]}

    vbitrate=$( echo "scale=0; ${info[6]}/1024" | $bc )  # convert to kbps
    if [[ "$vbitrate" ]]; then
        bpp=$(compute_bpp "$width" "$height" "$fps" "$length" "" "$vbitrate")
    fi

    vformat=${info[7]}

    passes="0"

    display_title "$width" "$height" "$fps" "$length" "$bpp" "$passes" "$vbitrate" "$vformat" "$abitrate" "$aformat" "$filesize" "$filename"
done
